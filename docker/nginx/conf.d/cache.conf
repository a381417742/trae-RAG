# RAG知识库问答系统 - Nginx缓存配置

# 定义缓存路径和配置
proxy_cache_path /var/cache/nginx/api 
    levels=1:2 
    keys_zone=api_cache:10m 
    max_size=100m 
    inactive=60m 
    use_temp_path=off;

proxy_cache_path /var/cache/nginx/static 
    levels=1:2 
    keys_zone=static_cache:10m 
    max_size=500m 
    inactive=1d 
    use_temp_path=off;

# 缓存配置服务器块
server {
    listen 8080;
    server_name cache-server;
    
    # API响应缓存配置
    location /api/system/stats {
        proxy_pass http://fastapi_backend;
        proxy_cache api_cache;
        proxy_cache_valid 200 5m;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_lock on;
        
        # 缓存头设置
        add_header X-Cache-Status $upstream_cache_status;
        add_header X-Cache-Key $scheme$proxy_host$request_uri;
        
        # 代理头设置
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # 系统健康检查缓存
    location /api/system/health {
        proxy_pass http://fastapi_backend;
        proxy_cache api_cache;
        proxy_cache_valid 200 30s;
        proxy_cache_valid 404 502 503 504 10s;
        
        add_header X-Cache-Status $upstream_cache_status;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # 文档格式信息缓存
    location /api/documents/formats {
        proxy_pass http://fastapi_backend;
        proxy_cache api_cache;
        proxy_cache_valid 200 1h;
        proxy_cache_valid 404 5m;
        
        add_header X-Cache-Status $upstream_cache_status;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # API文档缓存
    location ~ ^/(docs|redoc|openapi.json) {
        proxy_pass http://fastapi_backend;
        proxy_cache static_cache;
        proxy_cache_valid 200 1h;
        proxy_cache_valid 404 5m;
        
        add_header X-Cache-Status $upstream_cache_status;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # 静态资源缓存
    location /static/ {
        alias /var/www/static/;
        
        # 缓存控制
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # 启用gzip压缩
            gzip_static on;
        }
        
        location ~* \.(html|htm)$ {
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
        }
        
        location ~* \.(json|xml|txt)$ {
            expires 1d;
            add_header Cache-Control "public";
        }
        
        access_log off;
    }
}

# 缓存清理配置
server {
    listen 8081;
    server_name cache-admin;
    
    # 仅允许内网访问
    allow 172.20.0.0/16;
    allow 172.21.0.0/16;
    allow 127.0.0.1;
    deny all;
    
    # 缓存状态查看
    location /cache/status {
        access_log off;
        return 200 "Cache Status OK\n";
        add_header Content-Type text/plain;
    }
    
    # 清理API缓存
    location /cache/purge/api {
        proxy_cache_purge api_cache $scheme$proxy_host$request_uri;
        access_log off;
    }
    
    # 清理静态缓存
    location /cache/purge/static {
        proxy_cache_purge static_cache $scheme$proxy_host$request_uri;
        access_log off;
    }
    
    # 缓存统计信息
    location /cache/stats {
        access_log off;
        return 200 '{
    "api_cache": {
        "zone": "api_cache",
        "size": "10m",
        "max_size": "100m",
        "inactive": "60m"
    },
    "static_cache": {
        "zone": "static_cache", 
        "size": "10m",
        "max_size": "500m",
        "inactive": "1d"
    }
}';
        add_header Content-Type application/json;
    }
}